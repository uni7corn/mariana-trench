{
  "model_generators": [
    {
      "find": "methods",
      "where": [
        {
          "constraint": "parent",
          "inner": {
            "constraint": "extends",
            "inner": {
              "constraint": "name",
              "pattern": "Lcom/facebook/marianatrench/integrationtests/JsonModelGeneratorIntegrationTest2;"
            }
          }
        },
        {
          "constraint": "name",
          "pattern": "function"
        },
        {
          "constraint": "signature_pattern",
          "pattern": "Lcom/facebook/marianatrench/integrationtests/JsonModelGeneratorIntegrationTest2;\\.function:\\(II\\)I"
        },
        {
          "constraint": "return",
          "inner": {
            "constraint": "name",
            "pattern": "I"
          }
        },
        {
          "constraint": "is_static",
          "value": false
        },
        {
          "constraint": "has_code",
          "value": true
        },
        {
          "constraint": "number_parameters",
          "inner": {
            "constraint": "==",
            "value": 3
          }
        }
      ],
      "model": {
        "modes": [
          "skip-analysis"
        ],
        "for_all_parameters": [
          {
            "variable": "x",
            "where": [],
            "parameter_sources": [
              {
                "kind": "TestParameterSource",
                "port": "Argument(x)"
              }
            ],
            "sinks": [
              {
                "kind": "TestSink",
                "port": "Argument(x)",
                "via_type_of": [
                  "Argument(0)"
                ]
              }
            ],
            "propagation": [
              {
                "input": "Argument(x)",
                "output": "Argument(1)",
                "collapse": false
              }
            ],
            "generations": [
              {
                "kind": "TestGeneration",
                "port": "Argument(x)"
              }
            ],
            "sources": [
              {
                "kind": "TestOtherGeneration",
                "port": "Return"
              },
              {
                "kind": "TestOtherParameterSource",
                "port": "Argument(x)"
              }
            ],
            "attach_to_sources": [
              {
                "features": [
                  "via-function-source"
                ],
                "port": "Argument(x)"
              }
            ],
            "attach_to_sinks": [
              {
                "features": [
                  "via-function-sink"
                ],
                "port": "Argument(x)"
              }
            ],
            "attach_to_propagations": [
              {
                "features": [
                  "via-function-propagation"
                ],
                "port": "Argument(x)"
              }
            ],
            "add_features_to_arguments": [
              {
                "features": [
                  "via-features-to-arguments"
                ],
                "port": "Argument(x)"
              }
            ],
            "sanitizers": [
              {
                "sanitize": "sources",
                "port": "Argument(x)",
                "kinds": [
                  {
                    "kind": "TestParameterSource"
                  }
                ]
              },
              {
                "sanitize": "sinks",
                "port": "Argument(x)",
                "kinds": [
                  {
                    "kind": "TestSink"
                  }
                ]
              },
              {
                "sanitize": "propagations",
                "port": "Argument(x)",
                "kinds": [
                  {
                    "kind": "Source[TestParameterSource]"
                  }
                ]
              },
              {
                "sanitize": "propagations",
                "port": "Argument(x)",
                "kinds": [
                  {
                    "kind": "Source[TestSink]"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "find": "methods",
      "where": [],
      "model": {
        "for_all_parameters": [
          {
            "variable": "x",
            "where": [
              {
                "constraint": "parameter_has_annotation",
                "type": "Lcom/facebook/marianatrench/integrationtests/TestParameterAnnotation;",
                "pattern": ".*"
              }
            ],
            "sources": [
              {
                "kind": "SensitiveData",
                "port": "Argument(x)"
              }
            ]
          }
        ]
      }
    }
  ]
}
